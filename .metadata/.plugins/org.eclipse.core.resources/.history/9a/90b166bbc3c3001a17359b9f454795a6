#ifndef GAMECARD_SETUP_H
#define GAMECARD_SETUP_H

#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <errno.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <commons/config.h>
#include <commons/bitarray.h>
#include <commons/collections/list.h>
#include "./bitmap.h"

typedef enum {
	METADATA,
	FILES,
	BLOCKS,
	POKEMON,
	TALL_GRASS
} e_paths_structure;

typedef struct {
	unsigned int blockSize, blocks;
	char* magicNumber;
}Metadata_LFS;

Metadata_LFS lfsMetaData;

t_config* config_metadata;
t_config* config_table_metadata;
t_bitarray* bitmap;
FILE* bitmap_file;
char* struct_paths[5];


void createRootFiles();
void setupMetadata();
void setupFilesDirectory();
void createBlocks();
void createBitmap(char* bitmapBin);
void createMetaDataFile(char* metadataBin);
void readBitmap(char* bitmapBin);
void readMetaData(char* metadataPath);
// Chequear, lee: archivos, directorios

/*void chequear_metadata(char* root_directory);
void leer_metadata(char* root);
void leer_bitmap(char* root);
void chequear_existencia_directorio(char* path);
void chequear_existencia_archivo(char* path);
char* buscar_path(char *root, char *path);
void corroborar_existencia(void* resultado);
char* metadata_key_string(char* memoria, int size_memoria, char* key);
uint32_t metadata_key_int(char* memoria, int size_memoria, char* key);*/

#endif GAMECARD_SETUP_H
